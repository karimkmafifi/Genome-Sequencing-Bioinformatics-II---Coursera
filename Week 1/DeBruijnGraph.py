def pathGraph(k, text):
    conns = {}
    for i in range(len(text)-k+1):
        prvNode = text[i:i+k][:-1]
        nextNode = text[i:i+k][1:]
        if prvNode in conns:
            conns[prvNode].append(nextNode)
        else:
            conns[prvNode] = [nextNode]
            
    connsLstOut = ''
    for key in conns:       
        if len(conns[key]) > 0:
            connsLstOut += key + ' -> '
            for i in range(len(conns[key])):
                if i < len(conns[key])-1:
                    connsLstOut += conns[key][i] + ', '
                else:
                    connsLstOut += conns[key][i]
            connsLstOut += '\n'
    
    return connsLstOut

#returnedConnStr = pathGraph(12, 'ATTCCGCATCTAAAGGGGCGCAACAACGATGCACTTGTGGGTCCCTAAAACGCTTACATGAATACGGCCTCTTGGGCGGTGTCGGTGAATCTGGATGAACAGTGGCAATCTCCTCACTGTCGCTACGACGGGTTGTCGGGAGGGGATGTGGGCCCCTGGCTCTCAACGGCCGGCCTCAGTTGGTGCTCCCTAGGATACGTCTGCCCCGGGTTCGTCGCTGAGGAATCGCCTCCTTTGCCCGCCGCTGCGCGCACAGGCTTACAGCACATACCAGGAGAATACTCATAACAGGCGCACACAAACTTCGAACTAGGTCGCGAGTAGCATCGGCCTTAGATGCAGCCTACAATCAAGACAGTGGTAAGGGTTGCTGCTTTTCCTTGTGTGAACTAGGCCATTTCGTTGGAGTGTTGGTTATCGAACAATGAGCCCAAACAGTATGTGCGGACCTGCGGGCCGTGCATTGTCTGAACTCTACCTTTTGACGCGCCGGGTAGCACCCCCCGAGTGTGCCGTCATCTAAACTTGTTTAGCTATGGTAAGCACTTTTGCCCACCAAGTTAGTGGGGTTATTCAATCTTCAAGTCTCATGAGCCAGTTACAAGTAAGTCCATTACTCGCAACCAGCGTGTCCCATATTGATCTAGCCTAATGGCTACTTGGGTCTCGGTGTCGGGCGACCGTTTTGCCGGGATGACCGTCGGAGTCATGCGGGGTATACTGCTAGTTACTCACTTAATGGCGGTAGGAACCCTGCTGCATGATGAACGATTCCACGTATTCCCAAAGGCACCCACGGTCTCGAGTGAATGCTTAAAATAACGGAATTCCAATATGTAGTGTGGAGAGTCTGGCTTAAATTAAAGACTATTGAGCTCCTGGGGCTCTAGCTTGGCGCCCTATTGGTACTTTACTAAGGATCGTAAAGAGAGTAGGTCTATCAGGGAGCGACAGAGGTACTGCGAGCGCCCCAAGTTGCCAGACGTTAGACAGCTTCATAATTCGACACAGCAGATGATGTCCGTAACACACGAGCGTACATACGCGACCACAAGAGTTAACAGAGGAATCTTCTAAATTGTCCATGTGGAGGGGGTCGTTAAACAACCTTCGGTGAATGCGGATGGATTCGGCTAGGAGACCCGTGTACACTTTGAAGGAGCTGTGGCCGTGGTGTTATGCACTATCAGTATCCAAGGGCCACTTCTGTTTCATGCCAGAAATCATCTCGGTTGACACCCTCGTGTGTTGAGTCGTGTCAGAGACTAAACTAGGTCTCTTTGTAGAAGGATCGGATTACAAGGTCCCTAGGGATGTGGGCAATCGAGGTACACACAATCCATGGCTAACAGGTAAGTGGGGGAGGAGTGGGCGAGTATACCGGTAGGGTAAGTTACCTATCGTGAGAACTGTCTGATGCGTGTCAACCGAAGTCTTGCATGACCTCCTATAGGTAAGGTACCAATGCGTGTAGGTTTATTCCAAACTTTTACCCCCGTAATGGTATTAAATCTCGGAACGTATTATACACTGCCTCGTATACTCACTGTGATATTGCCGCTGCTACCCAAGACGACATCGCGGACAATATGCAGCACCTAGACTCTCCCATTGGCTTTGCTTAGCCTCGGCCGGGATGAGCAACGCTCGTCTCTTTGGCCACTTGATTGTCTAATCGATAAGCGAATTGTACAACGGTTGCTTCAGCGTATCGAAGCTCCTGTGGAATCGCGAGCTGCCTCCCATCGGCGCGCAAAAAACTGTCCTCATTTGAGAGCACCCAGTTACTAACGACGTCTGTTTCGTACATTGAGATCTTACGTGAAGTGAGGCAGAGTTCGAACCAAGGGGCCCTCGCCCGGGAATCACCTTAGCATTAGAGACAAATTACTTGGATCGGCCCTAGGGTCTCCAAGTGAGTTAATGATCAATCTCGTCGCCGGCCGCGGGTGGTTGGTCGTAGTTTTGAGCTCCATAAGGAGCGCATTACTGGAAACCCC')
#f = open("C:/Users/karim.afifi/Desktop/Bioinformatics Specialization/Genome Sequencing (Bioinformatics II)/Week 1/pathGraphOutput.txt", "w")
#f.write(returnedConnStr)
#f.close()